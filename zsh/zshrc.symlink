source ~/dotfiles/zsh/instant.zsh
# source ~/dotfiles/zsh/env.zsh
source ~/dotfiles/zsh/path.zsh
source ~/dotfiles/zsh/aliases.zsh
source ~/dotfiles/zsh/completions.zsh
source ~/dotfiles/zsh/key-bindings.zsh

# Do not overwrite files when redirecting using ">". Note that you can still override this with ">|"
# set -o noclobber

# Enable extended glob
# setopt extendedglob

# # Remove older duplicate entries from history
# setopt hist_ignore_all_dups
# # Remove superfluous blanks from history items
# setopt hist_reduce_blanks
# # Show command with history expansion to user before running it
# setopt hist_verify

# Terminal title
DISABLE_AUTO_TITLE="true"
function _set_terminal_title() {
	local title="$(basename "$PWD")"
	if [[ -n $SSH_CONNECTION ]]; then
		title="$title \xE2\x80\x94 $HOSTNAME"
	fi
	echo -ne "\033];$title\007"
}
precmd_functions+=(_set_terminal_title)

# Save command history to disk
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=$HISTSIZE

# Enable zsh-syntax-highlighting: https://github.com/zsh-users/zsh-syntax-highlighting
# [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ] && source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Enable fzf: https://github.com/junegunn/fzf
# Use fd (https://github.com/sharkdp/fd) to respect .gitignore
export FZF_DEFAULT_COMMAND='fd --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS="--color bg:-1,bg+:-1,fg:-1,fg+:#feffff,hl:#993f84,hl+:#d256b5,info:#676767,prompt:#676767,pointer:#676767"
# Use fd to respect .gitignore and exclude .git directory
_fzf_compgen_path() {
  fd --hidden --exclude ".git" . "$1"
}
_fzf_compgen_dir() {
  fd --type d --hidden --exclude ".git" . "$1"
}
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# [ -f ~/z/z.sh ] && source ~/z/z.sh

# Load extra (private) settings
# [ -f ~/.zshlocal ] && source ~/.zshlocal

export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"
export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@3/lib/pkgconfig"
export PATH="$HOME/go/bin:$PATH"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<


 osh() {
    last_command=$(fc -ln -1)
    last_command=$(echo "$last_command" | sed 's/^[[:space:]]*//')
    last_output=$(eval "$last_command")
    retVal=$?
    if [ $retVal -ne 0 ]; then
        osh_py "input" "$last_command" "output" "$last_output" "return_code" "$retVal"
    else
        echo "Your last command ran successfully. Please summon me only when something goes wrong."
    fi
}
export PATH="/opt/homebrew/opt/openjdk@11/bin:$PATH"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"


# pnpm
export PNPM_HOME="/Users/hb/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# Added by Windsurf
export PATH="/Users/hb/.codeium/windsurf/bin:$PATH"
